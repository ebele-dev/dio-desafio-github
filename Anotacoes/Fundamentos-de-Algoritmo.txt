Tipologia e vari√°veis
Qual a fun√ß√£o do computador?
Processar informa√ß√µes, que s√£o compostas por dados (objetos de manipula√ß√£o e processamento) e instru√ß√µes (normativas e diretrizes utilizadas pelo computador para executar determinadas a√ß√µes que ir√£o processar os dados)
Tais dados s√£o tratados e processados, e podem ser do tipo num√©ricos, caracteres ou l√≥gicos
Tipo - num√©ricos:
Inteiros: positivos  e negativos sem casas decimais
Reais: positivos  e negativos com casas decimais
Tipo - l√≥gico:
booleano
verdadeiro - 1
falso - 0
O que √© uma vari√°vel?
√© uma estrutura que ir√° receber um tipo de dado; pode assumir qualquer um dos valores de um determinado conjunto de valores, contudo, est√° restrita a seu tipo
‚Äú√© uma gaveta dentro de um arm√°rio e ir√° identificar determinado dado e o seu tipo
Nome da vari√°vel - regras:
atribui√ß√£o de uma mais caracteres (um nome que fa√ßa sentido)
sem espa√ßos em branco
pode receber caracteres e n√∫meros, mas precisa come√ßar com uma letra
n√£o utilizar palavras reservadas como nome de vari√°vel
Pap√©is de uma vari√°vel:
a√ß√£o: modifica o estado do algoritmo/programa
controle

****************

# Instru√ß√µes primitivas

<aside>
üìå Instru√ß√µes: s√£o linguagens de **palavras-chave** (vocabul√°rio) de uma determinada linguagem de programa√ß√£o que tem por finalidade comandar um computador que ir√° **tratar os dados**

</aside>

- Instru√ß√µes determinam as a√ß√µes que ser√£o executadas sobre os dados, geralmente s√£o c√°lculos matem√°ticos e para isso ser√£o utilizados operadores

****************

# Estruturas condicionais e operadores

**Estrutura condicional:**

dado o estado de uma pessoa ou coisa, existe uma condi√ß√£o para aquilo acontecer

**Condicional:** que expressa uam condi√ß√£o ou suposi√ß√£o; cont√©m ou implica uma suposi√ß√£o ou hip√≥tese; h√° uma condi√ß√£o que se satisfeita executa determinada instru√ß√£o


- AND: √© verdadeiro quando todas as condi√ß√µes s√£o verdadeiras
- OR: √© falso quando todas as condi√ß√µes s√£o falsas, ent√£o, se uma condi√ß√£o √© V, o resultado j√° √© V
- NOT: √© um operador de nega√ß√£o, ele inverte o resultado; se a condi√ß√£o √© verdadeira, o resultado ser√° falso; se a condi√ß√£o √© falsa, o resultado ser√° verdadeiro

***************

# Estruturas de repeti√ß√£o

- para quando precisamos que um determinado trecho do programa/c√≥digo seja executado mais de uma vez, a partir de certos par√¢metros estabelecidos
    - La√ßos = controle de fluxo = malhas de repeti√ß√£o = repeti√ß√£o = loop
    - se tratando de estruturas de repeti√ß√£o, faz-se necess√°rio ter **condi√ß√µes de parada** (n√∫mero de repeti√ß√µes pr√©-fixada, condi√ß√µes a ser satisfeitas), para que n√£o se entre em um looping infinito
    
- Vantagens:
    - redu√ß√£o de linhas
    - compreens√£o facilitada
    - redu√ß√£o de erro
    
- [ ]  **Enquanto / while**
    - Teste l√≥gico √© no IN√çCIO
    - n√∫mero de repeti√ß√µes: indefinidas
    
    ![Captura de tela 2022-07-07 113223.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/38759978-f84f-40ae-b1f2-0402444e2b01/Captura_de_tela_2022-07-07_113223.png)
    
- [ ]  **Repita**
    - Teste l√≥gico √© no FINAL
    - n√∫mero de repeti√ß√µes: indefinidas
    
    ![Captura de tela 2022-07-07 113815.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b547a42a-6a76-414d-a21b-cb9345214bf4/Captura_de_tela_2022-07-07_113815.png)
    

- [ ]  Para‚Ä¶de‚Ä¶at√© / **For**
    - Teste √© no IN√çCIO
    - n√∫mero de repeti√ß√µes: **definidas**
    
    ![Captura de tela 2022-07-07 114212.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/db8df17f-0f9b-4269-a42c-725844de3293/Captura_de_tela_2022-07-07_114212.png)
    
- [ ]  √© poss√≠vel utilizar uma estrutura dentro da outra, mesclando-as

![Captura de tela 2022-07-07 114424.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/2d9615f8-9e4e-4235-8fca-5728f24cf677/Captura_de_tela_2022-07-07_114424.png)

**************

# Vetores e matrizes

- **Vetor** √© uma sequ√™ncia de tipos de dados; ‚Äú√© caracterizado por uma vari√°vel dimensionada com tamanho pr√©-fixado‚Äù, que ir√° receber n valores
- **Matriz**: ****√© uma tabela organizada em linhas e colunas no formato *m* x *n*, onde *m* representa o n√∫mero de linhas (horizontal) e *n* o n√∫mero de colunas (vertical); √© uma cole√ß√£o de vetores (vari√°veis), e para navegar por esses vetores, √© necess√°rio √≠ndices

************

# Fun√ß√µes

- sin√¥nimos: subalgoritmo, subprograma, bloco, m√©todo, sub-rotina
- a partir do argumento que ela recebe, me retornar√° um valor

<aside>
üìå **Fun√ß√µes**: s√£o blocos de instru√ß√µes que realizam tarefas espec√≠ficas; permite a modulariza√ß√£o do programa e com isso o c√≥digo se torna mais claro e conciso e permite a reutiliza√ß√£o de instru√ß√µes; s√£o identificadas por nomes e par√¢metros (assinatura da fun√ß√£o)

</aside>

- a fun√ß√£o altera o estado do programa; recebe os dados e retorna um resultado

***************
# Instru√ß√µes de entrada/sa√≠da

<aside>
üìå **Instru√ß√µes de entrada**: consiste na inser√ß√£o e recebimento de dados do mundo real por meio de a√ß√£o de alguma interface, seja teclado, mouse, arquivos, entre outros.

</aside>

<aside>
üìå **Instru√ß√µes de sa√≠da**: consiste na impress√£o dos dados do mundo abstrato, digital, por meio de a√ß√£o de alguma interface; os formatos podem variar desde simples arquivos bin√°rios at√© complexas querys de banco de dados.

</aside>

- Existem dois tipos de sa√≠das dentro de um algoritmo (programa):
    - sa√≠da programada (incondicional ou condicional - aguarda o dispositivo)
    - sa√≠da por interrrup√ß√£o (definida pelos perif√©ricos)

- Casos para sa√≠da na programa√ß√£o:
    - tarefa bem sucedida
    - erro de sintaxe ou outro
    - erros de programa√ß√£o
    - problemas com a interface
