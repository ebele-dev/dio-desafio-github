# Introdu√ß√£o

<aside>
üñ•Ô∏è **Pensamento computacional**: processo de pensamento envolvido na express√£o de solu√ß√µes em passos computacionais ou algoritmos que podem ser implementados no computador.
                                                                                 
                                                                                                      (Aho, 2011; Lee, 2016)

</aside>

- Sistem√°tico e eficiente
- Formula√ß√£o e resolu√ß√£o de problemas
- Humanos e m√°quinas devem ser capazes de resolver
- Se trata de uma habilidade generalista

- Baseado em 4 pilares
    - **Decomposi√ß√£o**: dividir um problema complexo em subproblemas
    - **Reconhecimento de padr√µes**: identificar padr√µes ou tend√™ncias (similaridades e diferen√ßas entre os problemas; padr√£o comportamental)
    - **Abstra√ß√£o**: extrapolar o conceito do problema (particular/espec√≠fico) para uma forma generalista; pego do mundo concreto e levo para o mundo das ideias
    - **Design de algoritmos**: automatizar; define o passo a passo a solu√ß√£o do problema
    
- Se trata de um processo cont√≠nuo:
    - definir uma solu√ß√£o
    - test√°-la
    - aperfei√ßo√°-la
    
      >>>>    TESTE >>>>  AN√ÅLISE >>>>  REFINAMENTO >>>>
    
    <aside>
    üñ•Ô∏è No pensamento computacional √© poss√≠vel utilizao o melhor dos dois mundos, as habilidades humanas e os recursos computacionais. Os seres humanos s√£o √≥timos em detectar padr√£o, fazem isso naturalmente. **Habilidades humanas**: abstra√ß√£o (resolu√ß√£o de problemas) e automatiza√ß√£o (express√£o de solu√ß√£o). **Recursos computacionais**: an√°lise (execu√ß√£o da solu√ß√£o e avalia√ß√£o (refinamento))
    
    </aside>
    
    - Compet√™ncias que surgem ao implementar o pensamento computacional:
        - pensamento sistem√°tico/anal√≠tico
        - colabora√ß√£o dentro da equipe (consegue estruturar melhor a resolu√ß√£o do problema/id√©ias)
        - criatividade e design (atrelado a como consegue identificar os padr√µes/solu√ß√µes, explicar melhor
        - facilitador (apresentar a solu√ß√£o de forma mais resolutiva)

******************

Habilidades complementares
- [ ]  **Racioc√≠nio l√≥gico** : forma de pensamento estruturado, ou racioc√≠nio, que permite encontrar a conclus√£o ou determinar a resolu√ß√£o de um problema; algo que precisa ser treinado
    
        Classifica√ß√£o:
    
    - **Indu√ß√£o**: atrav√©s de fen√¥meno observado, gerando leis e teorias; ci√™ncias experimentais
    - **Dedu√ß√£o**: inverso da indu√ß√£o; atrav√©s de leis e teorias deduz previs√µes e explica√ß√µes para determinado fen√¥meno; ci√™ncias exatas
    - **Abdu√ß√£o**:  a partir de uma conclus√£o, tira-se a premissa (ex: a grama est√° molhada, logo deve ter chovido). Sup√µe-se algo a partir de uma observa√ß√£o (n√£o necessariamente a premissa √© verdadeira); processo investigativo e diagn√≥sticos.
    
    <aside>
    üñ•Ô∏è A partir de uma infer√™ncia, tem-se o pensamento por s√≠ntese (constru√ß√£o) e o pensamento anal√≠tico. Na infer√™ncia sint√©tica, tem-se a abdu√ß√£o e indu√ß√£o. Na anal√≠tica, tem-se dedu√ß√£o.
    
    </aside>
    
- [ ]  **Aperfei√ßoamento**: a partir de uma solu√ß√£o, determinar pontos de melhora e refinamento, pontuais ou global.
    - [ ]  Ato de aperfei√ßoar:
        - [ ]  Melhor uso de recursos:
        - encontrar solu√ß√µes eficientes
        - otimizar processos
        - [ ]  Melhorar c√≥digos e algoritmos:
        - simplificar linhas de c√≥digos
        - fun√ß√µes bem definidas
- est√£o atreladas ao tipo de pensamento que precisamos desenvolver para lidar com resolu√ß√£o de problemas

**************

# Pilares: Decomposi√ß√£o

- [ ]  Primeiro passo da resolu√ß√£o de problemas dentros do conceito de pensamento computacional
    
    
- ‚ÄúDado um problema complexo, devemos quebr√°-lo em problemas menores. Portanto, problemas mais f√°ceis e gerenci√°veis.‚Äù
    - Estrat√©gia de decomposi√ß√£o:
        - An√°lise: processo de quebrar e determinar partes menores e gerenci√°veis
        - S√≠ntese: combinar os elementos recompondo o problema original (consiste em reunir elementos distintos em um √∫nico grande elemento; fundindo os elementos de maneira coerente; processo de reconstru√ß√£o)
    - A ordem de execu√ß√£o dessas tarefas menores pode ser:
        - Sequencial:
            - se houver depend√™ncia entre elas; executadas em ‚Äúfila‚Äù
        - Paralela: tarefas podem ser executadas concomitantemente
        
    
    <aside>
    üìå √â importante que se treine maneiras distintas de decompor o mesmo problema, uma vez que um √∫nico problema pode ter diversas formas de solu√ß√£o
    
    </aside>
    
    - Como decompor?
        - 
            - [ ]  Identificar ou coletar dados que est√£o relacionados ao problema (segmenta em problemas menores)
            - [ ]  Agrega os dados
            - [ ]  Entrega funcionalidade (resolu√ß√£o do problema)

*************

# Pilares: Padr√µes

- Reconhecimento de padr√µes envolve:
    - modelo base ou refer√™ncia
    - estrutura invariante
    - repeti√ß√£o
    
- Tal reconhecimento √© feito atrav√©s de similaridades e diferen√ßas

Por que determinar padr√µes?

- para generalizar, com objetivo de obter resolu√ß√£o para problemas diferentes
- os seres humanos reconhecem padr√µes pelo grau de similaridade, analisando entre grupos conhecidos e objeto desconhecido, utilizando tamb√©m a subjetividade
- o computador reconhece padr√£o por compara√ß√£o, de forma objetiva. Se n√£o tem tal informa√ß√£o, n√£o consegue fazer compara√ß√£o, n√£o consegue determinar a qual categoria se refere aquele dado/objeto. Por isso, √© necess√°rio representar os atributos, para que a m√°quina consiga aprender o conceito associado ao objeto. Assim, ir√° armazenar esses dados para consultas posteriores. Utilizar√° regras de decis√£o, exemplo, um objeto ‚Äúx‚Äù tem caracter√≠sticas de uma categoria ‚Äúz‚Äù, ent√£o provavelmente ele faz parte de ‚Äúz‚Äù
- a abordadem de reconhecimento de padr√µes √© feita atrav√©s da extra√ß√£o de caracter√≠sticas e classifica√ß√£o de dados; utilizando diferentes m√©todos e aplicando de diferentes maneiras

**************

# Pilares: Abstra√ß√£o

- [ ]  Abstrair: observar um ou mais elementos, avaliando caracter√≠sticas e propriedades em separado
- [ ]  **Abstra√ß√£o**: processo intelectual de isolamento de um objeto da realidade, extrapolar para o mundo abstrato. Classificar os dados por suas caracter√≠sticas, detectar os pontos essenciais e generalizar em detrimento do detalhe
- [ ]  Generalizar: tornar-se geral, mais amplo; na l√≥gica, generaliza√ß√£o √© a *opera√ß√£o intelectual que consiste em reunir numa classe geral, um conjunto de seres ou fen√¥menos similares*

***************

# Pilares: Algoritmos

- [ ]  Um computador n√£o opera sozinho. √â necess√°rio que sejam determinadas instru√ß√µes para que ele possa executar. Precisa de instru√ß√µes detalhadas, que ser√£o utilizadas no processamento de dados, atrav√©s dos programas.
- [ ]  Computador: recebe, manipula, armazena e processa dados.
- [ ]  Programas: s√£o constitu√≠dos de instru√ß√µes com o passo a passo do que o computador precisa realizar (step by step); o que precisa ser feito e qual a ordem da execu√ß√£o

- Desenvolvimento do Programa (instru√ß√µes detalhadas > algoritmo > programa)
    - An√°lise: estudo e defini√ß√£o dos dados de entrada e sa√≠da
    - Algoritmo: descreve o problema por meio de ferramentas narrativas, fluxograma ou pseudoc√≥digo
    - Codifica√ß√£o: o algoritmo √© codificado de acordo com a linguagem de programa√ß√£o escolhida
    
    <aside>
    üìå Sequ√™ncia de passos com objetivo definido
    Execu√ß√£o de tarefas espec√≠ficas
    Conjunto de opera√ß√µes que resultam em uma sucess√£o finita de a√ß√µes
    
    Instru√ß√µes executada passo a passo para concluir a tarefa
    
    </aside>
    
    - Como construir um algoritmo?
    1. Compreens√£o do problema atrav√©s dos pontos mais importantes
    2. Defini√ß√£o dos dados de entrada, atrav√©s dos dados fornecidos e do cen√°rio (inerentes ao contexto)
    3. Definir o processamento dos dados, quais opera√ß√µes ser√£o realizadas dentro do algoritmo
    4. Definir os dados de sa√≠da, ou seja os resultados ap√≥s o processamento
    5. Utilizar um m√©todo de constru√ß√£o e refinamento do algoritmo e realizar testes e diagn√≥sticos
